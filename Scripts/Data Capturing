import cv2
import os
import time
from datetime import datetime

# Configuration
classes = ["Hello", "Thank you", "Yes", "No", "I love you"]
images_per_class = 100
interval_seconds = 2
base_dir = "sign_language_dataset"

# Create base directory if it doesn't exist
os.makedirs(base_dir, exist_ok=True)

# Open webcam
cap = cv2.VideoCapture(0)
if not cap.isOpened():
    print("Error: Could not open webcam.")
    exit()

print("Webcam ready. Press 'q' at any time to exit.")

try:
    for sign_class in classes:
        class_dir = os.path.join(base_dir, sign_class.replace(" ", "_"))
        os.makedirs(class_dir, exist_ok=True)

        input(f"\n[READY] Press Enter to start capturing for class: '{sign_class}'...")

        count = 0
        while count < images_per_class:
            ret, frame = cap.read()
            if not ret:
                print("Failed to capture frame.")
                break

            # Show preview
            cv2.imshow(f"Capturing: {sign_class}", frame)

            # Save the image
            timestamp = datetime.now().strftime('%Y%m%d_%H%M%S_%f')
            filename = f"{sign_class.replace(' ', '_')}_{timestamp}.jpg"
            filepath = os.path.join(class_dir, filename)
            cv2.imwrite(filepath, frame)
            print(f"[{sign_class}] Saved image {count + 1} -> {filepath}")
            count += 1

            # Wait for 2 seconds or quit early
            for _ in range(int(interval_seconds * 10)):  # 2 seconds = 20 * 0.1s
                if cv2.waitKey(100) & 0xFF == ord('q'):
                    raise KeyboardInterrupt

        print(f"âœ… Finished capturing for '{sign_class}'.")

except KeyboardInterrupt:
    print("\nCapture interrupted by user.")

finally:
    cap.release()
    cv2.destroyAllWindows()
    print("Camera released and all windows closed.")
